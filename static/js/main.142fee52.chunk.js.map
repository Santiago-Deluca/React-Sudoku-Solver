{"version":3,"sources":["redBoxLocations.js","box.js","makeGrid.js","solverFunction.js","loggerComponent.js","result.js","boardGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["redBoxLocations","Box","row","col","val","changer","bgColor","includes","style","backgroundColor","className","type","min","max","value","onChange","e","makeGrid","grid","i","j","push","returnEmpty","board","length","checkAvailable","no","rc","x","Math","floor","y","join","solveBoard","logger","empty","r","c","LoggerComponent","toDisplay","logs","map","Result","duration","color","board1","split","Number","board2","board3","allBoards","boardGenerator","index","random","initialState","speed","App","useState","state","setState","cellChange","temp","target","toString","resetBoard","onClick","start","performance","now","ts","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.142fee52.chunk.js","sourcesContent":["export const redBoxLocations = [\r\n\t\"03\",\"04\",\"05\",\r\n\t\"13\",\"14\",\"15\",\r\n\t\"23\",\"24\",\"25\",\r\n\t\"63\",\"64\",\"65\",\r\n\t\"73\",\"74\",\"75\",\r\n\t\"83\",\"84\",\"85\",\r\n\t\"30\",\"31\",\"32\",\r\n\t\"40\",\"41\",\"42\",\r\n\t\"50\",\"51\",\"52\",\r\n\t\"36\",\"37\",\"38\",\r\n\t\"46\",\"47\",\"48\",\r\n\t\"56\",\"57\",\"58\"\r\n];","import React from 'react';\r\nimport './index.css';\r\nimport {redBoxLocations} from './redBoxLocations.js';\r\n\r\nfunction Box({row, col, val, changer}){\r\n\tval = val !== 0 ? val : \"\";\r\n\tlet bgColor = \"#ff4d4d\";\r\n\tif (redBoxLocations.includes(row+col))\r\n\t\tbgColor = \"#333333\";\r\n\treturn (\r\n\t\t<input \r\n\t\t\tstyle={{backgroundColor: bgColor}}\r\n\t\t\tclassName=\"box\"\r\n\t\t\ttype=\"number\"\r\n\t\t\tmin=\"1\"\r\n\t\t\tmax=\"9\"\r\n\t\t\tvalue={val}\r\n\t\t\tonChange={(e)=> changer(e,row, col)}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default Box;","export default function makeGrid (){\r\n\tlet grid = [];\r\n\tlet row;\r\n\tfor (let i = 0; i < 9; i += 1){\r\n\t\trow = [];\r\n\t\tfor (let j = 0; j < 9; j += 1)\r\n\t\t\trow.push(0);\r\n\t\tgrid.push(row);\r\n\t}\r\n\treturn grid;\r\n}","function returnEmpty(board){\r\n\tfor (let i = 0; i < board.length; i += 1)\r\n\t\tfor (let j = 0; j < board[0].length; j += 1)\r\n\t\t\tif (board[i][j] === 0)\r\n\t\t\t\treturn [i,j];\r\n\treturn null;\r\n}\r\n\r\nfunction checkAvailable(board, no, rc){\r\n\tfor (let i = 0; i < board[0].length; i += 1)\r\n\t\tif (board[rc[0]][i] === no && i !== rc[1])\r\n\t\t\treturn false;\r\n\r\n\tfor (let i = 0; i < board.length; i += 1)\r\n\t\tif (board[i][rc[1]] === no && i !== rc[0])\r\n\t\t\treturn false;\r\n\r\n\tlet x = Math.floor(rc[0]/3);\r\n\tlet y = Math.floor(rc[1]/3);\r\n\r\n\tfor (let i = x * 3; i < (x*3) + 3; i += 1)\r\n\t\tfor (let j = y * 3; j < (y*3) + 3; j += 1)\r\n\t\t\tif ([i, j].join('') !== rc.join('') && board[i][j] === no)\r\n\t\t\t\treturn false;\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function solveBoard(board, logger = []){\r\n\tlet empty = returnEmpty(board);\r\n\tif (empty === null)\r\n\t\treturn true;\r\n\tlet [r, c] = [...empty];\r\n\tlogger.push(`Rows ${r+1}, Column ${c+1} is empty`);\r\n\tfor (let i = 1; i < 10; i += 1){\r\n\t\tif (checkAvailable(board, i, [r, c]) === true){\r\n\t\t\tboard[r][c] = i;\r\n\t\t\tlogger.push(`Trying to fix ${i} at Row ${r+1} Column ${c+1}`);\r\n\t\t\tif (solveBoard(board, logger) === true){\r\n\t\t\t\tlogger.push(`Fixed ${i} at Row ${r+1} Column ${c+1}`);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tboard[r][c] = 0;\r\n\t\t\tlogger.push(`Resetting ${i} at Row ${r+1} Column ${c+1}`);\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}","import React from 'react';\r\nimport './index.css';\r\n\r\nfunction LoggerComponent({logs}){\r\n\tlet toDisplay = logs.map((val, i) => <div key={i} className=\"splP\">{val}</div>);\r\n\treturn (\r\n\t\t<div className=\"loggerBox\">\r\n\t\t\t{toDisplay}\r\n\t\t</div>);\r\n}\r\n\r\nexport default LoggerComponent;","import React from 'react';\r\nimport './index.css';\r\n\r\nfunction Result({duration}){\r\n\treturn (\r\n\t\t<div style={{color: \"white\"}}>\r\n\t\t\t<h2>\r\n\t\t\t\tBoard Solved in <span style={{color:\"#66ff66\"}}>{`${duration}`}</span> seconds. Check the log below for the steps.\r\n\t\t\t</h2>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Result;","const board1 = [\r\n\t\"000260701\",\"680070090\",\"190004500\",\r\n\t\"820100040\",\"004602900\",\"050003028\",\r\n\t\"009300074\",\"040050036\",\"703018000\"\r\n].map(val => val.split('').map(Number));\r\n\r\nconst board2 = [\r\n\t\"100489006\",\"730000040\",\"000001295\",\r\n\t\"007120600\",\"500703008\",\"006095700\",\r\n\t\"914600000\",\"020000037\",\"800512004\"\r\n].map(val => val.split('').map(Number));\r\n\r\nconst board3 = [\r\n\t\"020608000\",\"580009700\",\"000040000\",\r\n\t\"370000500\",\"600000004\",\"008000013\",\r\n\t\"000020000\",\"009800036\",\"000306090\"\r\n].map(val => val.split('').map(Number));\r\n\r\nconst allBoards = [\r\n\t[...board1], [...board2], [...board3]\r\n];\r\n\r\nexport default function boardGenerator() {\r\n\tlet index = Math.floor(Math.random() * allBoards.length);\r\n\treturn [...allBoards[index]];\r\n}","import './index.css';\nimport Box from './box.js';\nimport React, {useState} from 'react';\nimport makeGrid from './makeGrid.js';\nimport {solveBoard} from './solverFunction.js';\nimport LoggerComponent from './loggerComponent.js';\nimport Result from './result.js';\nimport boardGenerator from './boardGenerator.js';\n\nconst initialState = {\n  grid: makeGrid(),\n  logs: [],\n  speed: 0\n};\n\nfunction App() {\n  const [state, setState] = useState(initialState);\n\n  let board = [];\n\n  function cellChange(e, r, c) {\n    let temp = [...state.grid];\n    temp[r][c] = +e.target.value;\n    setState({...state, ...{grid:temp}});\n  }\n\n  for (let i = 0; i < 9; i += 1){\n    let row = [];\n    for (let j = 0; j < 9; j += 1)\n      row.push(<Box \n        key={(i*10)+j}\n        row={i.toString()} \n        col={j.toString()} \n        val={state.grid[i][j]} \n        changer={cellChange}/>\n      );\n    board.push(row);\n  }\n\n  function print() {\n    let start = performance.now()\n    solveBoard(state.grid, state.logs);\n    let end = performance.now();\n    let ts = ((end-start)/1000).toFixed(3);\n    state.logs.push(`Board Solved in ${ts} Seconds`);\n    setState({grid: state.grid,logs: state.logs, speed: ts}); }\n\n  function resetBoard() {\n    setState({grid: makeGrid(),logs: [], speed: 0});\n  }\n\n  function prettyPrint(){\n    resetBoard();\n    setState({grid: [...boardGenerator()], logs: [], speed: 0});\n  }\n\n  return (\n    <div>\n      <h1>Sudoku Solver</h1>\n      <div className=\"grid-container\">\n        {board}\n      </div>\n      {state.logs.length > 0 && <Result duration={state.speed} />}\n      {state.logs.length > 0 && <LoggerComponent logs={state.logs} />}\n      <div className=\"buttons-grid\">\n        <button className=\"green\" onClick={resetBoard}>Reset</button>\n        <button className=\"yellow\" onClick={prettyPrint}>Random</button>\n        <button className=\"blue\" onClick={print}>Solve</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}